/**
 * 密码长度 6-12 位，由数字、小写字符和大写字母组成，但必须至少包括 2 种字符
 * 同时包含数字和小写字母
 * 同时包含数字和大写字母
 * 同时包含小写字母和大写字母
 * 同时包含数字、小写字母和大写字母
 * 满足以上其中一种情况
 */

/**
 * ^表示开头位置
 * ((?=.*[0-9])(?=.*[a-z])|(?=.*[0-9])(?=.*[A-Z])|(?=.*[a-z])(?=.*[A-Z])|(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]))
 * 表示开头前面还有个位置(当然也是开头，即同一个位置，想想之前的空字符类比)
 * 表示.*[0-9]这个字符串的前面位置
 * 要理解位置的特性
 * 位置的特性 可以根据来限制该位置后面内容 （表示位置后面的内容应该按照这个规则.*[0-9]）
 */
const regex = /((?=.*[0-9])(?=.*[a-z])|(?=.*[0-9])(?=.*[A-Z])|(?=.*[a-z])(?=.*[A-Z])|(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]))^[0-9a-zA-z]{6,12}/;

console.log(regex.test("abcdef")); // false 全是小写字母
console.log(regex.test("ABCDEFGH")); // false 全是大写字母
console.log(regex.test("ab23C")); // false 不足6位
console.log(regex.test("ABCDEF234")); // true 大写字母和数字
console.log(regex.test("abcdEF234")); // true 三者都有
